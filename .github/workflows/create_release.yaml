#
# Workflow to create a new release.
#

name: Create Release

permissions:
  contents: read

on:
  push:
    tags: 'v*'

jobs:
  build-wheel:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y lsb-release make binutils
          sudo apt-get install -y python3-dev python3-venv
          sudo apt-get install git git-lfs
      - name: Build Wheel
        run: |
          make build-wheel
      - name: Test Wheel
        run: |
          make functional-tests-wheel
      - name: Move Wheel
        run: |
          mkdir -p releases
          mv dist/gitcache*.whl releases/
      - name: Create Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-wheel
          retention-days: 1
          overwrite: true
          path: |
            releases

  build-ubuntu:
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04, ubuntu-22.04-arm, ubuntu-24.04-arm]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y lsb-release make binutils
          sudo apt-get install -y python3-dev python3-venv
          sudo apt-get install git git-lfs
      - name: Build Release
        run: |
          make current-release
      - name: Test Release
        run: |
          make test-current-release
      - name: Create Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.os }}
          retention-days: 1
          overwrite: true
          path: |
            releases

  build-alpine:
    strategy:
      matrix:
        os: [alpine3.20]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y lsb-release make binutils
          sudo apt-get install -y python3-dev python3-venv
          sudo apt-get install git git-lfs
      - name: Build Release
        run: |
          make current-release.venv.${{ matrix.os }}
      - name: Test Release
        run: |
          make test-current-release.${{ matrix.os }}
      - name: Create Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.os }}
          retention-days: 1
          overwrite: true
          path: |
            releases

  build-windows-2022:
    runs-on: windows-2022
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: true
      # Note: Keep python version in sync with pip-deps!
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11.9'
      - name: Install dependencies
        uses: crazy-max/ghaction-chocolatey@v3
        with:
          args: install -y make
      - name: Refresh Environment
        shell: cmd
        run: |
          refreshenv
      - name: Build Release
        shell: cmd
        run: |
          C:\ProgramData\chocolatey\bin\make current-release
      - name: Test Release
        shell: cmd
        run: |
          C:\ProgramData\chocolatey\bin\make test-current-release
      - name: Create Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-windows
          retention-days: 1
          overwrite: true
          path: |
            releases

  build-macos:
    strategy:
      matrix:
        os: [macos-13, macos-15]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install dependencies
        run: |
          brew install make
      - name: Build Release
        run: |
          make current-release
      - name: Test Release
        run: |
          make test-current-release
      - name: Create Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.os }}
          retention-days: 1
          overwrite: true
          path: |
            releases/*.tgz

  create_release:
    runs-on: ubuntu-latest
    needs: [build-wheel, build-ubuntu, build-alpine, build-windows-2022, build-macos]
    permissions:
      contents: write
    steps:
      - name: Get artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: releases
      - name: List releases folder
        run: ls -R releases
      - name: Create Release
        uses: "ncipollo/release-action@v1"
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          draft: true
          name: "gitcache ${{ github.ref }}"
          body: "# gitcache ${{ github.ref }}"
          artifacts: "releases/*"
